---
globs: *.py
---

# 错误处理和异常管理

## 文件操作异常处理
```python
# 文件读取模式
try:
    # 尝试多种编码
    for encoding in ['utf-8', 'gbk', 'gb2312', 'cp936']:
        try:
            df = pd.read_csv(file_path, encoding=encoding)
            break
        except UnicodeDecodeError:
            continue
except Exception as e:
    print(f"加载数据失败: {e}")
    return False
```

## 数据处理容错
- 使用 `pd.isna()` 检查空值
- 时间解析使用 `errors='coerce'`
- 字符串操作前先转换为字符串类型：`str(text)`
- 分组操作前检查列是否存在

## 文件路径检查
在处理前始终检查：
```python
def check_files():
    required_files = ['filtered_data.csv']
    missing = [f for f in required_files if not os.path.exists(f)]
    if missing:
        print(f"缺少文件: {', '.join(missing)}")
        return False
    return True
```

## 分析异常处理
- 每个分析函数都应有try-except包装
- 提供有意义的错误信息
- 空数据集的graceful handling
- 除零错误的预防检查

## 输出验证
- JSON保存前验证数据结构
- 确保所有必需字段存在
- 验证数值类型的合理性（如百分比在0-100之间）